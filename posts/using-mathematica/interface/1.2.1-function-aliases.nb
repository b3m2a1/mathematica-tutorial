(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     27429,        752]
NotebookOptionsPosition[     21292,        644]
NotebookOutlinePosition[     21723,        661]
CellTagsIndexPosition[     21680,        658]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"\[LeftAssociation]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"\"\<Title\>\"", "\[Rule]", "\"\<Function Aliases\>\""}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"\"\<Slug\>\"", "\[Rule]", "Automatic"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"\"\<Path\>\"", "\[Rule]", "\"\<Using Mathematica/Interface\>\""}],
    ",", "\[IndentingNewLine]", 
   RowBox[{"\"\<ID\>\"", "\[Rule]", "\"\<1.2.1\>\""}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"\"\<Date\>\"", "\[Rule]", "Now"}], ",", "\[IndentingNewLine]", 
   RowBox[{"\"\<Modified\>\"", "\[Rule]", "Now"}], ",", "\[IndentingNewLine]", 
   RowBox[{"\"\<Authors\>\"", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"\"\<Categories\>\"", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<using-mathematica\>\"", ",", "\"\<interface\>\""}], "}"}]}],
    ",", "\[IndentingNewLine]", 
   RowBox[{"\"\<Tags\>\"", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<functions\>\"", ",", "\"\<aliases\>\""}], "}"}]}]}], 
  "\[IndentingNewLine]", "\[RightAssociation]"}]], "Metadata",
 CellChangeTimes->{{3.7230674328716917`*^9, 3.723067452190956*^9}, {
   3.7230679580568*^9, 3.7230680128473673`*^9}, {3.7232007087815647`*^9, 
   3.7232007883818817`*^9}, 3.723201146733818*^9, {3.723203002317672*^9, 
   3.723203008852455*^9}, {3.723203499603772*^9, 3.7232035545127563`*^9}, {
   3.723203862030583*^9, 3.723203882695241*^9}, {3.723251366922554*^9, 
   3.72325136944061*^9}, {3.7233477975275183`*^9, 3.723347797771978*^9}, {
   3.723518901296051*^9, 
   3.723518902639752*^9}},ExpressionUUID->"193e9afe-58b0-4309-9e29-\
8bb496c1c725"],

Cell[CellGroupData[{

Cell["Function Aliases", "Subsection",
 CellChangeTimes->{{3.684261429975244*^9, 3.6842614336474247`*^9}, {
  3.684430597982893*^9, 3.684430598906816*^9}, {3.6844312529172773`*^9, 
  3.684431255381035*^9}},ExpressionUUID->"aff1d109-bd41-4831-9f43-\
474d298c0bd4"],

Cell["\<\
Mathematica has a series of useful function aliases that make coding more \
concise and readable.\
\>", "Text",
 CellChangeTimes->{{3.684430601291004*^9, 3.6844306538340597`*^9}, {
  3.684431259056879*^9, 
  3.684431261740964*^9}},ExpressionUUID->"64c5904e-80d3-4e61-a531-\
c13960d7a838"],

Cell[TextData[{
 "Technically, these are called ",
 StyleBox["infix operators",
  FontSlant->"Italic"],
 ", a term that also encapsulates ",
 Cell[BoxData[
  FormBox["+", TraditionalForm]], "InlineInput",ExpressionUUID->
  "02bb91a0-eb8f-4e2c-94c5-16f36ed2b3cb"],
 ", ",
 Cell[BoxData[
  FormBox["-", TraditionalForm]], "InlineInput",ExpressionUUID->
  "548554c4-9e64-4306-8e77-1b336c0c48e5"],
 ", and ",
 Cell[BoxData[
  FormBox["*", TraditionalForm]], "InlineInput",ExpressionUUID->
  "5cbec24f-90d0-46c2-872b-3665d893829e"],
 ", but that\[CloseCurlyQuote]s unimportant for their usage here."
}], "Text",
 InitializationCell->True,
 CellChangeTimes->{{3.68443091744214*^9, 
  3.684430987773241*^9}},ExpressionUUID->"b176024f-ecea-45a6-bec4-\
a37ec9349a8e"],

Cell[CellGroupData[{

Cell["@ (Prefix)", "Subsubsection",ExpressionUUID->"07df3413-0d01-4f1b-a26b-876d073ba052"],

Cell[TextData[{
 "The ",
 Cell[BoxData[
  FormBox["@", TraditionalForm]], "InlineInput",ExpressionUUID->
  "e52ebb88-f5f8-493b-86a3-82af058d0c62"],
 " alias is like a pair of square brackets. The following illustrates its \
usage:"
}], "Text",
 CellChangeTimes->{{3.68443070995328*^9, 
  3.684430741736473*^9}},ExpressionUUID->"c4f1aeec-61b9-4ea6-9ffc-\
ff8dfc0a272c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "@", "\[Pi]"}]], "Code",
 CellChangeTimes->{{3.684430746789956*^9, 3.68443075323265*^9}, {
   3.684430798785474*^9, 3.684430811424814*^9}, 
   3.723203913742694*^9},ExpressionUUID->"61551958-3cd3-4b8f-bfa7-\
0ac2e9f6e5f8"],

Cell[BoxData["3.141592653589793`"], "Output",
 CellChangeTimes->{
  3.684430754632514*^9, {3.6844308009025917`*^9, 3.6844308120285883`*^9}, 
   3.684545252071612*^9, 3.6845474948462143`*^9, 
   3.684557418260165*^9},ExpressionUUID->"0cdfe19b-de9e-497c-949a-\
71c813c1a17a"]
}, Open  ]],

Cell["\<\
It only applies to a single argument however. For example, Mathematica will \
not evaluate the following command\
\>", "Text",
 CellChangeTimes->{{3.684430763048215*^9, 3.684430791823566*^9}, {
  3.684606425207427*^9, 
  3.68460642796423*^9}},ExpressionUUID->"29d12fc4-6c39-4995-9c43-\
09c374e8b7a2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"N", "@", "\[Pi]"}], ",", "12"}]], "Code",
 CellChangeTimes->{{3.684430793182773*^9, 3.6844308177270727`*^9}, 
   3.723203913761752*^9},
 EmphasizeSyntaxErrors->
  True,ExpressionUUID->"1000eca4-571e-47b8-b386-fa8e06ab60b6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["/@ (Map)", "Subsubsection",ExpressionUUID->"de847141-d3eb-4509-8f75-f6304d955942"],

Cell[TextData[{
 Cell[BoxData[
  FormBox["/@", TraditionalForm]], "InlineInput",ExpressionUUID->
  "096c7ed3-4f14-41cf-a236-54dacc358d9b"],
 " takes a function and applies to every element in a list, returning the \
list of results. Example:"
}], "Text",
 CellChangeTimes->{{3.6844308868045*^9, 3.684430900355171*^9}, {
  3.6844310050892353`*^9, 
  3.68443104863626*^9}},ExpressionUUID->"8648917b-9508-4ab2-8a10-\
4d4679e5074f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sin", "/@", 
  RowBox[{"(", 
   RowBox[{"\[Pi]", "*", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"1", "/", "4"}], ",", 
      RowBox[{"1", "/", "2"}], ",", 
      RowBox[{"3", "/", "4"}], ",", "1", ",", 
      RowBox[{"1", "+", 
       RowBox[{"1", "/", "4"}]}], ",", 
      RowBox[{"1", "+", 
       RowBox[{"1", "/", "2"}]}], ",", 
      RowBox[{"1", "+", 
       RowBox[{"3", "/", "4"}]}], ",", "2"}], "}"}]}], ")"}]}]], "Code",
 CellChangeTimes->{{3.6844310510099897`*^9, 3.684431136794783*^9}, 
   3.723203913785969*^9},ExpressionUUID->"68b6a499-1c7d-4b6a-8c64-\
bf44b47682fb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   FractionBox["1", 
    SqrtBox["2"]], ",", "1", ",", 
   FractionBox["1", 
    SqrtBox["2"]], ",", "0", ",", 
   RowBox[{"-", 
    FractionBox["1", 
     SqrtBox["2"]]}], ",", 
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", 
    FractionBox["1", 
     SqrtBox["2"]]}], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.68443107718008*^9, 3.6844311045939083`*^9}, 
   3.684431137798243*^9, 3.6845452521724033`*^9, 3.684547494943123*^9, 
   3.6845574183301287`*^9},ExpressionUUID->"b3f07490-81c3-4dd7-b285-\
533bd6dbc21b"]
}, Open  ]],

Cell["\<\
When using this alias care should be taken that the right-hand side is \
wrapped in parentheses, as was done above, if it\[CloseCurlyQuote]s more than \
just a simple list.\
\>", "Text",
 CellChangeTimes->{{3.6844311519696608`*^9, 
  3.68443118597677*^9}},ExpressionUUID->"6c4b635e-e14e-4692-8f47-\
3445beeb03f8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["@@ (Apply)", "Subsubsection",ExpressionUUID->"91d7c97e-68e2-4b12-91a6-625a648caae7"],

Cell[TextData[{
 Cell[BoxData[
  FormBox["@@", TraditionalForm]], "InlineInput",ExpressionUUID->
  "8e8d8442-4c6a-40a9-ac60-676b22286ea7"],
 " applies a function to all the arguments in a list. That is, the elements \
of the list become the arguments to the function. Example:"
}], "Text",
 CellChangeTimes->{{3.684431269002706*^9, 
  3.684431308811818*^9}},ExpressionUUID->"854163e3-d902-435e-81f2-\
fef5654652d1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "@@", 
  RowBox[{"{", 
   RowBox[{"\[Pi]", ",", "12"}], "}"}]}]], "Code",
 CellChangeTimes->{{3.684431312873577*^9, 3.68443131657189*^9}, 
   3.7232039138092337`*^9},ExpressionUUID->"1c7029ed-870c-4a52-9a25-\
d46cfcfffefc"],

Cell[BoxData["3.14159265358979323846264338327950419984`12."], "Output",
 CellChangeTimes->{3.684431317044388*^9, 3.6845452522443447`*^9, 
  3.684547495013275*^9, 
  3.684557418379632*^9},ExpressionUUID->"2c6c393d-8561-4d46-bec5-\
f519bd8c692d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["// (Postfix)", "Subsubsection",ExpressionUUID->"a07fb463-27bb-4b29-ba1b-06a88780d899"],

Cell[TextData[{
 Cell[BoxData[
  FormBox["//", TraditionalForm]], "InlineInput",ExpressionUUID->
  "ceab76ff-0713-4a01-9683-769c53f54d9a"],
 " is more or less a reversed form of ",
 Cell[BoxData[
  FormBox["@", TraditionalForm]], "InlineInput",ExpressionUUID->
  "9b5b4e9b-42c2-4bce-aa2d-83c7a553b928"],
 ". Example:"
}], "Text",
 CellChangeTimes->{{3.684431340748384*^9, 
  3.6844314209294043`*^9}},ExpressionUUID->"72dddea9-0cbd-4aed-a3d0-\
64fa416bda65"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Pi]", "//", "N"}]], "Code",
 CellChangeTimes->{{3.684431422698189*^9, 3.6844314236896877`*^9}, 
   3.723203913848843*^9},ExpressionUUID->"82ee671e-f920-4741-950c-\
7401a661b37f"],

Cell[BoxData["3.141592653589793`"], "Output",
 CellChangeTimes->{3.6844314242203503`*^9, 3.684545252306093*^9, 
  3.684547495079973*^9, 
  3.6845574184319687`*^9},ExpressionUUID->"5d26faf0-fea9-49a2-b281-\
832f8cfea030"]
}, Open  ]],

Cell["\<\
But there is a small difference in terms of how the two work with other \
operators.\
\>", "Text",
 CellChangeTimes->{{3.684431428789721*^9, 3.6844314727662077`*^9}, {
  3.684431524195675*^9, 
  3.684431524435478*^9}},ExpressionUUID->"82e9974d-46ba-479a-9acb-\
6f86d0062467"],

Cell[TextData[{
 "Consider you\[CloseCurlyQuote]re trying to apply the function ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]], "InlineInput",ExpressionUUID->
  "42a64c96-6215-4820-a23d-33bc3643abe5"],
 " to the list of results generated by using ",
 Cell[BoxData[
  FormBox[
   RowBox[{"g", "/@", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}], TraditionalForm]], 
  "InlineInput",ExpressionUUID->"39756df6-bc37-4ebd-aa84-6299172a6e7a"],
 "\nOne might first try the following:"
}], "Text",
 CellChangeTimes->{{3.684431526275649*^9, 
  3.68443163293254*^9}},ExpressionUUID->"13324f15-3290-41db-8cb9-\
b670bb719446"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "@", "g"}], "/@", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}]], "Code",
 CellChangeTimes->{{3.684431474979887*^9, 3.6844315037735786`*^9}, 
   3.7232039138778667`*^9},ExpressionUUID->"37c83ab8-9fc8-4b22-b397-\
763ff4bee334"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", "g", "]"}], "[", "1", "]"}], ",", 
   RowBox[{
    RowBox[{"f", "[", "g", "]"}], "[", "2", "]"}], ",", 
   RowBox[{
    RowBox[{"f", "[", "g", "]"}], "[", "3", "]"}], ",", 
   RowBox[{
    RowBox[{"f", "[", "g", "]"}], "[", "4", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.684431492464541*^9, 3.684431505589321*^9}, 
   3.684545252372066*^9, 3.684547495146982*^9, 
   3.684557418481591*^9},ExpressionUUID->"86d5c4d3-d41c-430a-a52c-\
4dbf8b64eb1f"]
}, Open  ]],

Cell[TextData[{
 "This clearly doesn\[CloseCurlyQuote]t work. ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]], "InlineInput",ExpressionUUID->
  "c55cd779-c1e8-4339-a724-9af4f535cc6f"],
 " is applied to ",
 Cell[BoxData[
  FormBox["g", TraditionalForm]], "InlineInput",ExpressionUUID->
  "d17c6a5b-a098-4714-b68b-4115354a218c"],
 " before being mapped across ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], TraditionalForm]], 
  "InlineInput",ExpressionUUID->"02b531dd-f29c-4af5-bb6e-e2c765ebe8b5"],
 "."
}], "Text",
 CellChangeTimes->{{3.6844316351564198`*^9, 
  3.6844316798073483`*^9}},ExpressionUUID->"129e3578-3204-43c6-a877-\
ac44ad6556c2"],

Cell["In this case there are two options:", "Text",
 CellChangeTimes->{{3.6844316351564198`*^9, 
  3.68443168993946*^9}},ExpressionUUID->"fa26b966-5513-466f-b9d1-\
03ac3cd494eb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "@", 
  RowBox[{"(", 
   RowBox[{"g", "/@", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}], ")"}]}]], "Code",
 CellChangeTimes->{{3.6844316974816227`*^9, 3.684431703267272*^9}, 
   3.723203913897621*^9},ExpressionUUID->"a09858a6-7da4-46cb-9953-\
657228fb654e"],

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"g", "[", "1", "]"}], ",", 
    RowBox[{"g", "[", "2", "]"}], ",", 
    RowBox[{"g", "[", "3", "]"}], ",", 
    RowBox[{"g", "[", "4", "]"}]}], "}"}], "]"}]], "Output",
 CellChangeTimes->{3.684431703737501*^9, 3.684545252440135*^9, 
  3.684547495213176*^9, 
  3.684557418531218*^9},ExpressionUUID->"382f1a3b-72f6-4ca7-9905-\
dbb65d1172f5"]
}, Open  ]],

Cell["or", "Text",
 CellChangeTimes->{{3.68443170873982*^9, 
  3.684431709147584*^9}},ExpressionUUID->"cc187d2e-8f10-4680-afd3-\
a99f8d4a3d61"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "/@", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}], "//", "f"}]], "Code",\

 CellChangeTimes->{{3.6844316974816227`*^9, 3.684431716922698*^9}, 
   3.723203913926859*^9},ExpressionUUID->"6ca52059-4f7e-4188-a64a-\
a3ab8f8f9c9e"],

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"g", "[", "1", "]"}], ",", 
    RowBox[{"g", "[", "2", "]"}], ",", 
    RowBox[{"g", "[", "3", "]"}], ",", 
    RowBox[{"g", "[", "4", "]"}]}], "}"}], "]"}]], "Output",
 CellChangeTimes->{{3.684431703737501*^9, 3.684431720244362*^9}, 
   3.684545252505204*^9, 3.684547495279468*^9, 
   3.684557418597824*^9},ExpressionUUID->"4c8a6e2a-f5e1-4743-aaca-\
63f3bc0abfcc"]
}, Open  ]],

Cell[TextData[{
 "because ",
 Cell[BoxData[
  FormBox["/@", TraditionalForm]], "InlineInput",ExpressionUUID->
  "58c5945d-b8f7-4f7e-89fb-6e280e900783"],
 " evaluates before ",
 Cell[BoxData[
  FormBox["//", TraditionalForm]], "InlineInput",ExpressionUUID->
  "6ab14280-5480-43ad-9051-ee24a8b0272c"],
 ", this works. What is said is that ",
 Cell[BoxData[
  FormBox["//", TraditionalForm]], "InlineInput",ExpressionUUID->
  "f020a8f9-a230-4f8d-8e90-8c1564bfccea"],
 " has a ",
 StyleBox["low precedence",
  FontSlant->"Italic"],
 ".\n\nPrecedences for any operator can be checked using the function ",
 Cell[BoxData[
  FormBox["Precedence", TraditionalForm]], "InlineInput",ExpressionUUID->
  "036834ad-40e8-4241-88f9-e463a5f540ad"],
 ", if the function name is known. Function names for a given operator can be \
found by selecting the operator and using \[CommandKey]\[Dash]\[ShiftKey]\
\[Dash]F on Mac or F1 on Windows."
}], "Text",
 CellChangeTimes->{{3.684431722442357*^9, 3.684431734594034*^9}, {
  3.6844319140863543`*^9, 3.68443202051165*^9}, {3.684432106214994*^9, 
  3.6844321331486607`*^9}, {3.684432176163445*^9, 3.684432196498996*^9}, {
  3.723493425804277*^9, 
  3.7234934428742313`*^9}},ExpressionUUID->"36d6bcfb-e799-4bd4-9e7c-\
9a729bf2a7d4"],

Cell[TextData[{
 "For example, knowing that ",
 Cell[BoxData[
  FormBox["//", TraditionalForm]], "InlineInput",ExpressionUUID->
  "439520e9-e5ec-45b1-ae54-07a8f18d2dfc"],
 " is an alias for the function ",
 Cell[BoxData[
  FormBox["Postfix", TraditionalForm]], "InlineInput",ExpressionUUID->
  "6a161b2c-01c1-4f61-90fc-4260a2f4fc24"]
}], "Text",
 CellChangeTimes->{{3.68443220682749*^9, 
  3.684432230417823*^9}},ExpressionUUID->"0491ab3e-e288-494a-a76e-\
8450f454ad13"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Precedence", "@", "Postfix"}]], "Code",
 CellChangeTimes->{{3.6844322319689074`*^9, 3.684432236972324*^9}, {
   3.684432272410863*^9, 3.684432275504966*^9}, 
   3.7232039139467077`*^9},ExpressionUUID->"edfec108-0447-4928-ad74-\
52e4ace20b59"],

Cell[BoxData["70.`"], "Output",
 CellChangeTimes->{3.6844322373144608`*^9, 3.684545252573378*^9, 
  3.684547495346119*^9, 
  3.6845574186483383`*^9},ExpressionUUID->"27615cde-0e02-49c7-9944-\
c2662d49876b"]
}, Open  ]],

Cell[TextData[{
 "And we\[CloseCurlyQuote]ll compare that to the function ",
 Cell[BoxData[
  FormBox["Prefix", TraditionalForm]], "InlineInput",ExpressionUUID->
  "269837a1-701e-4fe8-90b8-86125ba54ea8"],
 " for which ",
 Cell[BoxData[
  FormBox["@", TraditionalForm]], "InlineInput",ExpressionUUID->
  "40c3f738-c44c-4e34-bc48-c38e5e8c4c79"],
 " is an alias"
}], "Text",
 CellChangeTimes->{{3.684432240602385*^9, 
  3.684432260001099*^9}},ExpressionUUID->"7121ce5d-a2e9-4c45-a955-\
302c8ddd2d60"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Prefix", "//", "Precedence"}]], "Code",
 CellChangeTimes->{{3.684432250698354*^9, 3.684432285296619*^9}, 
   3.7232039139753017`*^9},ExpressionUUID->"faad8ca8-cc52-4066-8ec2-\
6958d77afc1a"],

Cell[BoxData["640.`"], "Output",
 CellChangeTimes->{3.68443228565888*^9, 3.6845452526448393`*^9, 
  3.6845474954132643`*^9, 
  3.6845574187002583`*^9},ExpressionUUID->"cb2e212a-6de5-4966-9cb0-\
ea865577c71f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["~ (Infix)", "Subsubsection",ExpressionUUID->"f8a45f11-f906-4c4e-a467-c089649958eb"],

Cell[TextData[{
 Cell[BoxData[
  FormBox["~", TraditionalForm]], "InlineInput",ExpressionUUID->
  "07a1753b-b3fc-4ff2-9ec5-fc57404bc329"],
 " takes a function and applies it to the preceding and following arguments \
as follows:"
}], "Text",
 CellChangeTimes->{{3.6844317847356653`*^9, 
  3.6844318423795443`*^9}},ExpressionUUID->"6048a2f5-5991-45bb-b5da-\
cc2660475dc0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Pi]", "~", "N", "~", "12"}]], "Code",
 CellChangeTimes->{{3.684431845547626*^9, 3.684431849259638*^9}, 
   3.723203913996998*^9},ExpressionUUID->"7ffd8fce-32a3-4ea4-ab61-\
4afde98c2aac"],

Cell[BoxData["3.14159265358979323846264338327950419984`12."], "Output",
 CellChangeTimes->{3.68443184987821*^9, 3.684545252706623*^9, 
  3.684547495479801*^9, 
  3.6845574187476263`*^9},ExpressionUUID->"92ab4561-7fa0-4767-bbfe-\
501c2a02b33d"]
}, Open  ]],

Cell[TextData[{
 "This is useful and worth knowing, but it can often be cleaner simply to use \
",
 Cell[BoxData[
  FormBox["@@", TraditionalForm]], "InlineInput",ExpressionUUID->
  "a49b8fbf-64ac-4d4f-a6e9-c1f979e3530a"],
 ", potentially in combination with ",
 Cell[BoxData[
  FormBox["//", TraditionalForm]], "InlineInput",ExpressionUUID->
  "a3046eb5-cdfe-43ea-a6ee-ab1559fad5e8"]
}], "Text",
 CellChangeTimes->{{3.684431854043255*^9, 3.684431907942615*^9}, {
  3.68443229309525*^9, 3.68443231590145*^9}, {3.6844323569974737`*^9, 
  3.684432360045925*^9}, {3.684432405191663*^9, 
  3.684432443850667*^9}},ExpressionUUID->"e34c17b3-532a-4d7c-acb5-\
0adfa319b831"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  FormBox["@*", TraditionalForm]], "InlineInput",ExpressionUUID->
  "b6c0a41a-6ac0-4d0a-96a8-33be35a84256"],
 " (Composition)"
}], "Subsubsection",ExpressionUUID->"ea2d12f5-f43e-4e8a-8f07-61d41df7a5ec"],

Cell[TextData[{
 Cell[BoxData[
  FormBox["@*", TextInlineCell]], "InlineInput",ExpressionUUID->
  "02ea2829-64e7-4cfa-a165-4c5c9f545386"],
 " takes a two functions and composes them. For example:"
}], "Text",
 CellChangeTimes->{
  3.685311620629414*^9, {3.691972073547104*^9, 
   3.691972107136003*^9}},ExpressionUUID->"7d7f6d66-dd3b-43e4-a938-\
8f9ed59f9b7b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"f", "@*", "g"}], ")"}], "[", "1", "]"}]], "Code",
 GeneratedCell->False,
 CellChangeTimes->{{3.691972108855391*^9, 3.691972114887527*^9}, 
   3.723203914025173*^9},ExpressionUUID->"3285f220-1391-4b66-923b-\
32c766d59e98"],

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"g", "[", "1", "]"}], "]"}]], "Output",
 CellChangeTimes->{
  3.691972115520088*^9},ExpressionUUID->"13a664e3-1f78-44d6-8bdf-\
58187a71a054"]
}, Open  ]],

Cell[TextData[{
 "This is particularly useful when negating a function, that is, applying the \
",
 Cell[BoxData[
  FormBox["Not", TextInlineCell]], "InlineInput",ExpressionUUID->
  "e571296a-d7a4-4b0b-b436-8bc186ded681"],
 " function to it. We can make a simple ",
 Cell[BoxData[
  FormBox["NotTrueQ", TextInlineCell]], "InlineInput",ExpressionUUID->
  "49007fdb-b426-4b9d-9eb1-b889bd49d4a5"],
 " function by doing this:"
}], "Text",
 CellChangeTimes->{
  3.685311620629414*^9, {3.6919721255228777`*^9, 
   3.6919721909283247`*^9}},ExpressionUUID->"27e0c866-a66f-49b7-a142-\
1cd23bd64a64"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"NotTrueQ", "=", 
   RowBox[{"(", 
    RowBox[{"Not", "@*", "TrueQ"}], ")"}]}], ";"}], "\n", 
 RowBox[{"NotTrueQ", "@", "1"}], "\n", 
 RowBox[{"NotTrueQ", "@", "False"}], "\n", 
 RowBox[{"NotTrueQ", "@", "True"}]}], "Code",
 GeneratedCell->False,
 CellChangeTimes->{{3.691972148901135*^9, 3.6919722130108767`*^9}, 
   3.723203914045223*^9},ExpressionUUID->"d91c7e6d-22ea-4054-94d3-\
c20a68062a51"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.691972214265737*^9},ExpressionUUID->"38ecf9f4-02da-4cb1-b006-\
d66d5ac0ca62"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.691972214276019*^9},ExpressionUUID->"5e5a7aa8-c598-451b-926d-\
6dd04a4f78c7"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{
  3.691972214284452*^9},ExpressionUUID->"5732e54b-d930-40b4-b757-\
c853d4bcb8e0"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{808, 755},
WindowMargins->{{66, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.2 for Mac OS X x86 (32-bit, 64-bit Kernel) (September \
10, 2017)",
StyleDefinitions->FrontEnd`FileName[{"BTools"}, "MarkdownNotebook.nb", 
  CharacterEncoding -> "UTF-8"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 1637, 31, 259, "Metadata",ExpressionUUID->"193e9afe-58b0-4309-9e29-8bb496c1c725"],
Cell[CellGroupData[{
Cell[2220, 55, 263, 4, 52, "Subsection",ExpressionUUID->"aff1d109-bd41-4831-9f43-474d298c0bd4"],
Cell[2486, 61, 298, 7, 35, "Text",ExpressionUUID->"64c5904e-80d3-4e61-a531-c13960d7a838"],
Cell[2787, 70, 758, 21, 58, "Text",ExpressionUUID->"b176024f-ecea-45a6-bec4-a37ec9349a8e",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[3570, 95, 90, 0, 51, "Subsubsection",ExpressionUUID->"07df3413-0d01-4f1b-a26b-876d073ba052"],
Cell[3663, 97, 368, 10, 35, "Text",ExpressionUUID->"c4f1aeec-61b9-4ea6-9ffc-ff8dfc0a272c"],
Cell[CellGroupData[{
Cell[4056, 111, 250, 5, 52, "Code",ExpressionUUID->"61551958-3cd3-4b8f-bfa7-0ac2e9f6e5f8"],
Cell[4309, 118, 273, 5, 34, "Output",ExpressionUUID->"0cdfe19b-de9e-497c-949a-71c813c1a17a"]
}, Open  ]],
Cell[4597, 126, 310, 7, 58, "Text",ExpressionUUID->"29d12fc4-6c39-4995-9c43-09c374e8b7a2"],
Cell[4910, 135, 258, 6, 52, "Code",ExpressionUUID->"1000eca4-571e-47b8-b386-fa8e06ab60b6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5205, 146, 88, 0, 51, "Subsubsection",ExpressionUUID->"de847141-d3eb-4509-8f75-f6304d955942"],
Cell[5296, 148, 428, 10, 35, "Text",ExpressionUUID->"8648917b-9508-4ab2-8a10-4d4679e5074f"],
Cell[CellGroupData[{
Cell[5749, 162, 620, 17, 52, "Code",ExpressionUUID->"68b6a499-1c7d-4b6a-8c64-bf44b47682fb"],
Cell[6372, 181, 572, 17, 54, "Output",ExpressionUUID->"b3f07490-81c3-4dd7-b285-533bd6dbc21b"]
}, Open  ]],
Cell[6959, 201, 323, 7, 58, "Text",ExpressionUUID->"6c4b635e-e14e-4692-8f47-3445beeb03f8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7319, 213, 90, 0, 51, "Subsubsection",ExpressionUUID->"91d7c97e-68e2-4b12-91a6-625a648caae7"],
Cell[7412, 215, 415, 9, 58, "Text",ExpressionUUID->"854163e3-d902-435e-81f2-fef5654652d1"],
Cell[CellGroupData[{
Cell[7852, 228, 251, 6, 52, "Code",ExpressionUUID->"1c7029ed-870c-4a52-9a25-d46cfcfffefc"],
Cell[8106, 236, 244, 4, 34, "Output",ExpressionUUID->"2c6c393d-8561-4d46-bec5-f519bd8c692d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[8399, 246, 92, 0, 51, "Subsubsection",ExpressionUUID->"a07fb463-27bb-4b29-ba1b-06a88780d899"],
Cell[8494, 248, 457, 12, 35, "Text",ExpressionUUID->"72dddea9-0cbd-4aed-a3d0-64fa416bda65"],
Cell[CellGroupData[{
Cell[8976, 264, 204, 4, 52, "Code",ExpressionUUID->"82ee671e-f920-4741-950c-7401a661b37f"],
Cell[9183, 270, 220, 4, 34, "Output",ExpressionUUID->"5d26faf0-fea9-49a2-b281-832f8cfea030"]
}, Open  ]],
Cell[9418, 277, 285, 7, 35, "Text",ExpressionUUID->"82e9974d-46ba-479a-9acb-6f86d0062467"],
Cell[9706, 286, 649, 16, 58, "Text",ExpressionUUID->"13324f15-3290-41db-8cb9-b670bb719446"],
Cell[CellGroupData[{
Cell[10380, 306, 292, 7, 52, "Code",ExpressionUUID->"37c83ab8-9fc8-4b22-b397-763ff4bee334"],
Cell[10675, 315, 526, 14, 34, "Output",ExpressionUUID->"86d5c4d3-d41c-430a-a52c-4dbf8b64eb1f"]
}, Open  ]],
Cell[11216, 332, 702, 19, 35, "Text",ExpressionUUID->"129e3578-3204-43c6-a877-ac44ad6556c2"],
Cell[11921, 353, 178, 3, 35, "Text",ExpressionUUID->"fa26b966-5513-466f-b9d1-03ac3cd494eb"],
Cell[CellGroupData[{
Cell[12124, 360, 318, 8, 52, "Code",ExpressionUUID->"a09858a6-7da4-46cb-9953-657228fb654e"],
Cell[12445, 370, 413, 11, 34, "Output",ExpressionUUID->"382f1a3b-72f6-4ca7-9905-dbb65d1172f5"]
}, Open  ]],
Cell[12873, 384, 143, 3, 35, "Text",ExpressionUUID->"cc187d2e-8f10-4680-afd3-a99f8d4a3d61"],
Cell[CellGroupData[{
Cell[13041, 391, 295, 8, 52, "Code",ExpressionUUID->"6ca52059-4f7e-4188-a64a-a3ab8f8f9c9e"],
Cell[13339, 401, 439, 11, 34, "Output",ExpressionUUID->"4c8a6e2a-f5e1-4743-aaca-63f3bc0abfcc"]
}, Open  ]],
Cell[13793, 415, 1258, 29, 127, "Text",ExpressionUUID->"36d6bcfb-e799-4bd4-9e7c-9a729bf2a7d4"],
Cell[15054, 446, 470, 12, 35, "Text",ExpressionUUID->"0491ab3e-e288-494a-a76e-8450f454ad13"],
Cell[CellGroupData[{
Cell[15549, 462, 266, 5, 52, "Code",ExpressionUUID->"edfec108-0447-4928-ad74-52e4ace20b59"],
Cell[15818, 469, 206, 4, 34, "Output",ExpressionUUID->"27615cde-0e02-49c7-9944-c2662d49876b"]
}, Open  ]],
Cell[16039, 476, 497, 13, 35, "Text",ExpressionUUID->"7121ce5d-a2e9-4c45-a955-302c8ddd2d60"],
Cell[CellGroupData[{
Cell[16561, 493, 214, 4, 52, "Code",ExpressionUUID->"faad8ca8-cc52-4066-8ec2-6958d77afc1a"],
Cell[16778, 499, 208, 4, 34, "Output",ExpressionUUID->"cb2e212a-6de5-4966-9cb0-ea865577c71f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[17035, 509, 89, 0, 51, "Subsubsection",ExpressionUUID->"f8a45f11-f906-4c4e-a467-c089649958eb"],
Cell[17127, 511, 371, 9, 35, "Text",ExpressionUUID->"6048a2f5-5991-45bb-b5da-cc2660475dc0"],
Cell[CellGroupData[{
Cell[17523, 524, 212, 4, 52, "Code",ExpressionUUID->"7ffd8fce-32a3-4ea4-ab61-4afde98c2aac"],
Cell[17738, 530, 243, 4, 34, "Output",ExpressionUUID->"92ab4561-7fa0-4767-bbfe-501c2a02b33d"]
}, Open  ]],
Cell[17996, 537, 666, 15, 58, "Text",ExpressionUUID->"e34c17b3-532a-4d7c-acb5-0adfa319b831"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18699, 557, 233, 5, 51, "Subsubsection",ExpressionUUID->"ea2d12f5-f43e-4e8a-8f07-61d41df7a5ec"],
Cell[18935, 564, 360, 9, 35, "Text",ExpressionUUID->"7d7f6d66-dd3b-43e4-a938-8f9ed59f9b7b"],
Cell[CellGroupData[{
Cell[19320, 577, 273, 7, 52, "Code",ExpressionUUID->"3285f220-1391-4b66-923b-32c766d59e98"],
Cell[19596, 586, 185, 5, 34, "Output",ExpressionUUID->"13a664e3-1f78-44d6-8bdf-58187a71a054"]
}, Open  ]],
Cell[19796, 594, 590, 15, 58, "Text",ExpressionUUID->"27e0c866-a66f-49b7-a142-1cd23bd64a64"],
Cell[CellGroupData[{
Cell[20411, 613, 432, 11, 110, "Code",ExpressionUUID->"d91c7e6d-22ea-4054-94d3-c20a68062a51"],
Cell[20846, 626, 133, 3, 34, "Output",ExpressionUUID->"38ecf9f4-02da-4cb1-b006-d66d5ac0ca62"],
Cell[20982, 631, 133, 3, 34, "Output",ExpressionUUID->"5e5a7aa8-c598-451b-926d-6dd04a4f78c7"],
Cell[21118, 636, 134, 3, 34, "Output",ExpressionUUID->"5732e54b-d930-40b4-b757-c853d4bcb8e0"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

